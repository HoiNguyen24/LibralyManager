package manager;import com.sun.tools.javac.Main;import model.Account;import model.Role;import java.io.*;import java.util.ArrayList;import java.util.Scanner;public class ManagerAccount {    ArrayList<Account> accounts = new ArrayList<>();    ArrayList<Role> roles = new ArrayList<>();    Scanner scanner = new Scanner(System.in);    public ManagerAccount() {    }    public void readRole(){        try {            File roleFile = new File("roles.txt");            FileReader fileReader = new FileReader(roleFile);            BufferedReader bufferedReader = new BufferedReader(fileReader);            String str = null;            while((str = bufferedReader.readLine()) != null){                String[] arr = str.split(",");                roles.add(new Role(Integer.parseInt(arr[0]),arr[1]));            }//            for(int i = 0; i < roles.size();i++){//                System.out.println(roles.get(i).getName());//            }            writeRole();        } catch (Exception e) {            e.printStackTrace();            System.out.println("loi");        }    }    public void writeRole(){        try {            File roleFile = new File("roles.txt");            FileWriter fileWriter = new FileWriter(roleFile);            BufferedWriter writer = new BufferedWriter(fileWriter);            for(Role role:this.roles){                writer.write(role.getId() +","+role.getName());                writer.newLine();            }            writer.close();        } catch (Exception e){            e.printStackTrace();            System.err.println("loi");        }    }    public Account checkLogin(String username, String password) {        for (int i = 0; i < accounts.size(); i++) {            if (accounts.get(i).getUsername().equals(username)                    && accounts.get(i).getPassword().equals(password)) {                return accounts.get(i);            }        }        return null;    }    public void add(Account account) {        accounts.add(account);    }    public boolean checkUsername(String username) {        for (int i = 0; i < accounts.size(); i++) {            if (accounts.get(i).getUsername().equals(username)) {                return true;            }        }        return false;    }    public String validateUsername() {        while (true) {            System.out.println("Nhập username");            String username = scanner.nextLine();            if (checkUsername(username)) {                System.err.println("username đã trùng");            } else {                return username;            }        }    }    public String validatePassword() {        while (true) {            System.out.println("Nhập password");            String password = scanner.nextLine();            System.out.println("Nhập lại password");            String rePassword = scanner.nextLine();            if (password.equals(rePassword)) {                return password;            } else {                System.err.println("pass không trùng nhập lại");            }        }    }    public Role choiceRole() {        System.out.println("Danh sách quyền trong hệ thống");        for (int i = 0; i < roles.size(); i++) {            System.out.println(i+1 + " - " + roles.get(i).getName());        }        int choice = Integer.parseInt(scanner.nextLine());        return roles.get(choice-1);    }    public void writeAccount(Account account) {        try {            File accountFile = new File("accounts.txt");            BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(accountFile));            bufferedWriter.write(account.getId()+","+account.getUsername()+","+account.getPassword()+","+account.getRole());            bufferedWriter.close();        } catch (Exception e){            e.printStackTrace();            System.out.println("Lỗi lưu account");        }    }    public Role getRoleByName(String name) {        for(Role role : roles){            if(name.equals(role.getName())){                return role;            }        }        return new Role();    }    public void readAccount(){        try {            File accountFile = new File("accounts.txt");            BufferedReader bufferedReader = new BufferedReader(new FileReader(accountFile));            String str = null;            while((str = bufferedReader.readLine()) != null){                String[] arr = str.split(",");                add(new Account(arr[1],arr[2],getRoleByName(arr[3])));            }        } catch (Exception e){            e.printStackTrace();            System.out.println("loi doc file account");        }    }    public Account create() {        String username = validateUsername();        String password = validatePassword();        Role role = choiceRole();        Account newaccount = new Account(username,password,role);        writeAccount(newaccount);        return newaccount;    }}